# Generated from lphy/core/parser/antlr/LPhy.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,45,419,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,
        7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,
        12,1,12,1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,
        17,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,
        22,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,
        28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,
        31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,5,34,197,8,34,10,34,12,34,
        200,9,34,1,35,4,35,203,8,35,11,35,12,35,204,1,35,1,35,1,36,1,36,
        1,36,1,36,5,36,213,8,36,10,36,12,36,216,9,36,1,36,1,36,1,36,1,36,
        1,36,1,37,1,37,1,37,1,37,5,37,227,8,37,10,37,12,37,230,9,37,1,37,
        1,37,1,38,1,38,1,38,3,38,237,8,38,1,38,4,38,240,8,38,11,38,12,38,
        241,1,38,3,38,245,8,38,3,38,247,8,38,1,38,3,38,250,8,38,1,39,1,39,
        1,39,1,39,5,39,256,8,39,10,39,12,39,259,9,39,1,39,3,39,262,8,39,
        1,39,3,39,265,8,39,1,40,1,40,5,40,269,8,40,10,40,12,40,272,9,40,
        1,40,1,40,5,40,276,8,40,10,40,12,40,279,9,40,1,40,3,40,282,8,40,
        1,40,3,40,285,8,40,1,41,1,41,1,41,1,41,5,41,291,8,41,10,41,12,41,
        294,9,41,1,41,3,41,297,8,41,1,41,3,41,300,8,41,1,42,1,42,1,42,3,
        42,305,8,42,1,42,1,42,3,42,309,8,42,1,42,3,42,312,8,42,1,42,3,42,
        315,8,42,1,42,1,42,1,42,3,42,320,8,42,1,42,3,42,323,8,42,3,42,325,
        8,42,1,43,1,43,1,43,1,43,3,43,331,8,43,1,43,3,43,334,8,43,1,43,1,
        43,3,43,338,8,43,1,43,1,43,3,43,342,8,43,1,43,1,43,3,43,346,8,43,
        1,44,1,44,5,44,350,8,44,10,44,12,44,353,9,44,1,44,1,44,1,45,1,45,
        3,45,359,8,45,1,45,1,45,1,46,1,46,1,46,1,46,3,46,367,8,46,1,46,3,
        46,370,8,46,1,46,1,46,1,46,4,46,375,8,46,11,46,12,46,376,1,46,1,
        46,1,46,1,46,1,46,3,46,384,8,46,1,47,1,47,1,47,5,47,389,8,47,10,
        47,12,47,392,9,47,1,47,3,47,395,8,47,1,48,1,48,1,49,1,49,5,49,401,
        8,49,10,49,12,49,404,9,49,1,49,3,49,407,8,49,1,50,1,50,3,50,411,
        8,50,1,51,1,51,1,51,1,51,1,51,3,51,418,8,51,2,214,351,0,52,1,1,3,
        2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,
        51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,
        73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,0,93,0,
        95,0,97,0,99,0,101,0,103,0,1,0,25,3,0,9,10,12,13,32,32,2,0,10,10,
        13,13,1,0,49,57,2,0,76,76,108,108,2,0,88,88,120,120,3,0,48,57,65,
        70,97,102,4,0,48,57,65,70,95,95,97,102,1,0,48,55,2,0,48,55,95,95,
        2,0,66,66,98,98,1,0,48,49,2,0,48,49,95,95,4,0,68,68,70,70,100,100,
        102,102,2,0,80,80,112,112,2,0,43,43,45,45,2,0,69,69,101,101,8,0,
        34,34,39,39,92,92,98,98,102,102,110,110,114,114,116,116,1,0,48,51,
        1,0,48,57,2,0,48,57,95,95,4,0,36,36,65,90,95,95,97,122,2,0,0,127,
        55296,56319,1,0,55296,56319,1,0,56320,57343,1,0,880,1023,458,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
        0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
        0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
        0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,1,105,1,
        0,0,0,3,107,1,0,0,0,5,109,1,0,0,0,7,111,1,0,0,0,9,113,1,0,0,0,11,
        115,1,0,0,0,13,117,1,0,0,0,15,119,1,0,0,0,17,124,1,0,0,0,19,130,
        1,0,0,0,21,132,1,0,0,0,23,134,1,0,0,0,25,136,1,0,0,0,27,138,1,0,
        0,0,29,141,1,0,0,0,31,143,1,0,0,0,33,145,1,0,0,0,35,147,1,0,0,0,
        37,150,1,0,0,0,39,153,1,0,0,0,41,155,1,0,0,0,43,157,1,0,0,0,45,160,
        1,0,0,0,47,163,1,0,0,0,49,166,1,0,0,0,51,169,1,0,0,0,53,171,1,0,
        0,0,55,173,1,0,0,0,57,175,1,0,0,0,59,177,1,0,0,0,61,182,1,0,0,0,
        63,188,1,0,0,0,65,190,1,0,0,0,67,192,1,0,0,0,69,194,1,0,0,0,71,202,
        1,0,0,0,73,208,1,0,0,0,75,222,1,0,0,0,77,246,1,0,0,0,79,251,1,0,
        0,0,81,266,1,0,0,0,83,286,1,0,0,0,85,324,1,0,0,0,87,326,1,0,0,0,
        89,347,1,0,0,0,91,356,1,0,0,0,93,383,1,0,0,0,95,385,1,0,0,0,97,396,
        1,0,0,0,99,398,1,0,0,0,101,410,1,0,0,0,103,417,1,0,0,0,105,106,5,
        123,0,0,106,2,1,0,0,0,107,108,5,125,0,0,108,4,1,0,0,0,109,110,5,
        59,0,0,110,6,1,0,0,0,111,112,5,91,0,0,112,8,1,0,0,0,113,114,5,93,
        0,0,114,10,1,0,0,0,115,116,5,44,0,0,116,12,1,0,0,0,117,118,5,45,
        0,0,118,14,1,0,0,0,119,120,5,116,0,0,120,121,5,114,0,0,121,122,5,
        117,0,0,122,123,5,101,0,0,123,16,1,0,0,0,124,125,5,102,0,0,125,126,
        5,97,0,0,126,127,5,108,0,0,127,128,5,115,0,0,128,129,5,101,0,0,129,
        18,1,0,0,0,130,131,5,40,0,0,131,20,1,0,0,0,132,133,5,41,0,0,133,
        22,1,0,0,0,134,135,5,43,0,0,135,24,1,0,0,0,136,137,5,33,0,0,137,
        26,1,0,0,0,138,139,5,42,0,0,139,140,5,42,0,0,140,28,1,0,0,0,141,
        142,5,42,0,0,142,30,1,0,0,0,143,144,5,47,0,0,144,32,1,0,0,0,145,
        146,5,37,0,0,146,34,1,0,0,0,147,148,5,60,0,0,148,149,5,61,0,0,149,
        36,1,0,0,0,150,151,5,62,0,0,151,152,5,61,0,0,152,38,1,0,0,0,153,
        154,5,62,0,0,154,40,1,0,0,0,155,156,5,60,0,0,156,42,1,0,0,0,157,
        158,5,61,0,0,158,159,5,61,0,0,159,44,1,0,0,0,160,161,5,33,0,0,161,
        162,5,61,0,0,162,46,1,0,0,0,163,164,5,38,0,0,164,165,5,38,0,0,165,
        48,1,0,0,0,166,167,5,124,0,0,167,168,5,124,0,0,168,50,1,0,0,0,169,
        170,5,38,0,0,170,52,1,0,0,0,171,172,5,124,0,0,172,54,1,0,0,0,173,
        174,5,94,0,0,174,56,1,0,0,0,175,176,5,58,0,0,176,58,1,0,0,0,177,
        178,5,100,0,0,178,179,5,97,0,0,179,180,5,116,0,0,180,181,5,97,0,
        0,181,60,1,0,0,0,182,183,5,109,0,0,183,184,5,111,0,0,184,185,5,100,
        0,0,185,186,5,101,0,0,186,187,5,108,0,0,187,62,1,0,0,0,188,189,5,
        61,0,0,189,64,1,0,0,0,190,191,5,126,0,0,191,66,1,0,0,0,192,193,5,
        46,0,0,193,68,1,0,0,0,194,198,3,103,51,0,195,197,3,101,50,0,196,
        195,1,0,0,0,197,200,1,0,0,0,198,196,1,0,0,0,198,199,1,0,0,0,199,
        70,1,0,0,0,200,198,1,0,0,0,201,203,7,0,0,0,202,201,1,0,0,0,203,204,
        1,0,0,0,204,202,1,0,0,0,204,205,1,0,0,0,205,206,1,0,0,0,206,207,
        6,35,0,0,207,72,1,0,0,0,208,209,5,47,0,0,209,210,5,42,0,0,210,214,
        1,0,0,0,211,213,9,0,0,0,212,211,1,0,0,0,213,216,1,0,0,0,214,215,
        1,0,0,0,214,212,1,0,0,0,215,217,1,0,0,0,216,214,1,0,0,0,217,218,
        5,42,0,0,218,219,5,47,0,0,219,220,1,0,0,0,220,221,6,36,0,0,221,74,
        1,0,0,0,222,223,5,47,0,0,223,224,5,47,0,0,224,228,1,0,0,0,225,227,
        8,1,0,0,226,225,1,0,0,0,227,230,1,0,0,0,228,226,1,0,0,0,228,229,
        1,0,0,0,229,231,1,0,0,0,230,228,1,0,0,0,231,232,6,37,0,0,232,76,
        1,0,0,0,233,247,5,48,0,0,234,244,7,2,0,0,235,237,3,99,49,0,236,235,
        1,0,0,0,236,237,1,0,0,0,237,245,1,0,0,0,238,240,5,95,0,0,239,238,
        1,0,0,0,240,241,1,0,0,0,241,239,1,0,0,0,241,242,1,0,0,0,242,243,
        1,0,0,0,243,245,3,99,49,0,244,236,1,0,0,0,244,239,1,0,0,0,245,247,
        1,0,0,0,246,233,1,0,0,0,246,234,1,0,0,0,247,249,1,0,0,0,248,250,
        7,3,0,0,249,248,1,0,0,0,249,250,1,0,0,0,250,78,1,0,0,0,251,252,5,
        48,0,0,252,253,7,4,0,0,253,261,7,5,0,0,254,256,7,6,0,0,255,254,1,
        0,0,0,256,259,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,260,1,
        0,0,0,259,257,1,0,0,0,260,262,7,5,0,0,261,257,1,0,0,0,261,262,1,
        0,0,0,262,264,1,0,0,0,263,265,7,3,0,0,264,263,1,0,0,0,264,265,1,
        0,0,0,265,80,1,0,0,0,266,270,5,48,0,0,267,269,5,95,0,0,268,267,1,
        0,0,0,269,272,1,0,0,0,270,268,1,0,0,0,270,271,1,0,0,0,271,273,1,
        0,0,0,272,270,1,0,0,0,273,281,7,7,0,0,274,276,7,8,0,0,275,274,1,
        0,0,0,276,279,1,0,0,0,277,275,1,0,0,0,277,278,1,0,0,0,278,280,1,
        0,0,0,279,277,1,0,0,0,280,282,7,7,0,0,281,277,1,0,0,0,281,282,1,
        0,0,0,282,284,1,0,0,0,283,285,7,3,0,0,284,283,1,0,0,0,284,285,1,
        0,0,0,285,82,1,0,0,0,286,287,5,48,0,0,287,288,7,9,0,0,288,296,7,
        10,0,0,289,291,7,11,0,0,290,289,1,0,0,0,291,294,1,0,0,0,292,290,
        1,0,0,0,292,293,1,0,0,0,293,295,1,0,0,0,294,292,1,0,0,0,295,297,
        7,10,0,0,296,292,1,0,0,0,296,297,1,0,0,0,297,299,1,0,0,0,298,300,
        7,3,0,0,299,298,1,0,0,0,299,300,1,0,0,0,300,84,1,0,0,0,301,302,3,
        99,49,0,302,304,5,46,0,0,303,305,3,99,49,0,304,303,1,0,0,0,304,305,
        1,0,0,0,305,309,1,0,0,0,306,307,5,46,0,0,307,309,3,99,49,0,308,301,
        1,0,0,0,308,306,1,0,0,0,309,311,1,0,0,0,310,312,3,91,45,0,311,310,
        1,0,0,0,311,312,1,0,0,0,312,314,1,0,0,0,313,315,7,12,0,0,314,313,
        1,0,0,0,314,315,1,0,0,0,315,325,1,0,0,0,316,322,3,99,49,0,317,319,
        3,91,45,0,318,320,7,12,0,0,319,318,1,0,0,0,319,320,1,0,0,0,320,323,
        1,0,0,0,321,323,7,12,0,0,322,317,1,0,0,0,322,321,1,0,0,0,323,325,
        1,0,0,0,324,308,1,0,0,0,324,316,1,0,0,0,325,86,1,0,0,0,326,327,5,
        48,0,0,327,337,7,4,0,0,328,330,3,95,47,0,329,331,5,46,0,0,330,329,
        1,0,0,0,330,331,1,0,0,0,331,338,1,0,0,0,332,334,3,95,47,0,333,332,
        1,0,0,0,333,334,1,0,0,0,334,335,1,0,0,0,335,336,5,46,0,0,336,338,
        3,95,47,0,337,328,1,0,0,0,337,333,1,0,0,0,338,339,1,0,0,0,339,341,
        7,13,0,0,340,342,7,14,0,0,341,340,1,0,0,0,341,342,1,0,0,0,342,343,
        1,0,0,0,343,345,3,99,49,0,344,346,7,12,0,0,345,344,1,0,0,0,345,346,
        1,0,0,0,346,88,1,0,0,0,347,351,5,34,0,0,348,350,9,0,0,0,349,348,
        1,0,0,0,350,353,1,0,0,0,351,352,1,0,0,0,351,349,1,0,0,0,352,354,
        1,0,0,0,353,351,1,0,0,0,354,355,5,34,0,0,355,90,1,0,0,0,356,358,
        7,15,0,0,357,359,7,14,0,0,358,357,1,0,0,0,358,359,1,0,0,0,359,360,
        1,0,0,0,360,361,3,99,49,0,361,92,1,0,0,0,362,363,5,92,0,0,363,384,
        7,16,0,0,364,369,5,92,0,0,365,367,7,17,0,0,366,365,1,0,0,0,366,367,
        1,0,0,0,367,368,1,0,0,0,368,370,7,7,0,0,369,366,1,0,0,0,369,370,
        1,0,0,0,370,371,1,0,0,0,371,384,7,7,0,0,372,374,5,92,0,0,373,375,
        5,117,0,0,374,373,1,0,0,0,375,376,1,0,0,0,376,374,1,0,0,0,376,377,
        1,0,0,0,377,378,1,0,0,0,378,379,3,97,48,0,379,380,3,97,48,0,380,
        381,3,97,48,0,381,382,3,97,48,0,382,384,1,0,0,0,383,362,1,0,0,0,
        383,364,1,0,0,0,383,372,1,0,0,0,384,94,1,0,0,0,385,394,3,97,48,0,
        386,389,3,97,48,0,387,389,5,95,0,0,388,386,1,0,0,0,388,387,1,0,0,
        0,389,392,1,0,0,0,390,388,1,0,0,0,390,391,1,0,0,0,391,393,1,0,0,
        0,392,390,1,0,0,0,393,395,3,97,48,0,394,390,1,0,0,0,394,395,1,0,
        0,0,395,96,1,0,0,0,396,397,7,5,0,0,397,98,1,0,0,0,398,406,7,18,0,
        0,399,401,7,19,0,0,400,399,1,0,0,0,401,404,1,0,0,0,402,400,1,0,0,
        0,402,403,1,0,0,0,403,405,1,0,0,0,404,402,1,0,0,0,405,407,7,18,0,
        0,406,402,1,0,0,0,406,407,1,0,0,0,407,100,1,0,0,0,408,411,3,103,
        51,0,409,411,7,18,0,0,410,408,1,0,0,0,410,409,1,0,0,0,411,102,1,
        0,0,0,412,418,7,20,0,0,413,418,8,21,0,0,414,415,7,22,0,0,415,418,
        7,23,0,0,416,418,7,24,0,0,417,412,1,0,0,0,417,413,1,0,0,0,417,414,
        1,0,0,0,417,416,1,0,0,0,418,104,1,0,0,0,45,0,198,204,214,228,236,
        241,244,246,249,257,261,264,270,277,281,284,292,296,299,304,308,
        311,314,319,322,324,330,333,337,341,345,351,358,366,369,376,383,
        388,390,394,402,406,410,417,1,0,1,0
    ]

class LPhyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    DATA = 30
    MODEL = 31
    ASSIGN = 32
    TILDE = 33
    DOT = 34
    NAME = 35
    WS = 36
    COMMENT = 37
    LINE_COMMENT = 38
    DECIMAL_LITERAL = 39
    HEX_LITERAL = 40
    OCT_LITERAL = 41
    BINARY_LITERAL = 42
    FLOAT_LITERAL = 43
    HEX_FLOAT_LITERAL = 44
    STRING_LITERAL = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "';'", "'['", "']'", "','", "'-'", "'true'", "'false'", 
            "'('", "')'", "'+'", "'!'", "'**'", "'*'", "'/'", "'%'", "'<='", 
            "'>='", "'>'", "'<'", "'=='", "'!='", "'&&'", "'||'", "'&'", 
            "'|'", "'^'", "':'", "'data'", "'model'", "'='", "'~'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "DATA", "MODEL", "ASSIGN", "TILDE", "DOT", "NAME", "WS", "COMMENT", 
            "LINE_COMMENT", "DECIMAL_LITERAL", "HEX_LITERAL", "OCT_LITERAL", 
            "BINARY_LITERAL", "FLOAT_LITERAL", "HEX_FLOAT_LITERAL", "STRING_LITERAL" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "DATA", "MODEL", "ASSIGN", 
                  "TILDE", "DOT", "NAME", "WS", "COMMENT", "LINE_COMMENT", 
                  "DECIMAL_LITERAL", "HEX_LITERAL", "OCT_LITERAL", "BINARY_LITERAL", 
                  "FLOAT_LITERAL", "HEX_FLOAT_LITERAL", "STRING_LITERAL", 
                  "ExponentPart", "EscapeSequence", "HexDigits", "HexDigit", 
                  "Digits", "LetterOrDigit", "Letter" ]

    grammarFileName = "LPhy.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


